{"version":3,"sources":["App/Nav/Nav.tsx","App/SingleAnalyses/SingleAnalyses.tsx","App/CalcWithPy.ts","App/MultipleAnalyses/MultipleAnalyses.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Nav","tabs","currentTab","goToTab","map","tab","className","name","onClick","introParagraphs","useSingleAnalyses","useState","dimension","setDimension","attitude","setAttitude","reply","setReply","textFeatures","setTextFeatures","textAreaRef","React","createRef","analyze","current","value","console","log","theDimension","Math","random","toFixed","theAttitude","theTextFeatures","theReply","defaultInputData","defaultResults","results","setResults","inputData","setInputData","inputFileRef","item","commentText","floor","multipleAnalysesWithPy","inputFileOnChange","files","fileReader","FileReader","onload","e","target","result","JSON","parse","toString","data","length","readAsText","component","id","index","ref","type","onChange","App","eventsHandle","setCurrentTab","getEventsHandle","useApp","element","undefined","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58db5a8e.chunk.js","sourcesContent":["import './Nav.css'\ninterface NavProps {\n    tabs: { name: string, component: () => JSX.Element }[]\n    currentTab: string,\n    goToTab: (to: string) => void\n}\n\nexport default function Nav({\n    tabs,\n    currentTab,\n    goToTab\n}: NavProps) {\n    return (\n        <nav>\n            <ul>\n                {\n                    tabs.map(tab => (\n                        <li className={currentTab === tab.name ? 'selected' : ''}\n                            onClick={() => goToTab(tab.name)}\n                            key={tab.name}>{tab.name}</li>\n                    ))\n                }\n            </ul>\n        </nav >\n    )\n}","import React, { useState } from \"react\"\nimport './SingleAnalyses.css'\nimport { singleAnalysesWithPy } from '../CalcWithPy'\n\nconst introParagraphs = [\n    '该页面利用人工智能分析[某行业]产品的评论。',\n    '输入评论内容，点击开始分析按钮，将输出其评论角度，评论态度以及人工智能给出的自动回复。',\n    '评论角度分为[n]方面，分别是：string[]。',\n    '评论态度分为两种：正面和负面'\n]\n\nconst useSingleAnalyses = () => {\n    const [dimension, setDimension] = useState('等待输入评论')\n    const [attitude, setAttitude] = useState('等待输入评论')\n    const [reply, setReply] = useState('等待输入评论')\n    const [textFeatures, setTextFeatures] = useState('等待输入评论')\n\n    const textAreaRef = React.createRef<HTMLTextAreaElement>()\n\n    const analyze = () => {\n        const { theDimension, theAttitude,theTextFeatures, theReply } = singleAnalysesWithPy(textAreaRef.current?.value ?? '')\n        setDimension(theDimension)\n        setAttitude(theAttitude)\n        setTextFeatures(theTextFeatures)\n        setReply(theReply)\n    }\n\n    return {\n        dimension,\n        attitude,\n        textFeatures,\n        reply,\n        textAreaRef,\n        analyze\n    }\n}\n\nexport default function SingleAnalyses() {\n    const {\n        dimension,\n        attitude,\n        textFeatures,\n        reply,\n        textAreaRef,\n        analyze\n    } = useSingleAnalyses()\n\n    return (\n        <main id=\"single-analyses\" key=\"单条分析\">\n            <article className=\"introduction\">\n                <h1>使用说明</h1>\n                {\n                    introParagraphs.map((item, index) =>\n                        <p key={index}>{item}</p>\n                    )\n                }\n            </article>\n            <article className=\"input-area\">\n                <h1>输入评论内容</h1>\n                <textarea className=\"text-area\" ref={textAreaRef} />\n                <button className=\"ms-button primary\" onClick={analyze}>开始分析</button>\n            </article>\n            <article className=\"output-area\">\n                <h1>分析结果</h1>\n                <h2>评论角度</h2>\n                <p>{dimension}</p>\n                <h2>评论态度</h2>\n                <p>{attitude}</p>\n                <h2>文字特征</h2>\n                <p>{textFeatures}</p>\n                <h2>自动回复</h2>\n                <p>{reply}</p>\n            </article>\n        </main>\n    )\n}","export function singleAnalysesWithPy(comment: string) {\n    console.log('调用 CalcWithPy.ts:singleAnalysesWithPy')\n    return {\n        theDimension: '计算结果：评论角度 ' + Math.random().toFixed(4),\n        theAttitude: '计算结果：评论态度 ' + Math.random().toFixed(4),\n        theTextFeatures: '计算结果：文字特征 ' + Math.random().toFixed(4),\n        theReply: '计算结果：自动回复 ' + Math.random().toFixed(4),\n    }\n}\nexport function multipleAnalysesWithPy(inputData: string[]) {\n    console.log('调用 CalcWithPy.ts:multipleAnalysesWithPy')\n    return inputData.map(item => ({\n        commentText: item,\n        dimension: '角度' + Math.floor(Math.random() * 10),\n        attitude: '正/负',\n        textFeatures: '文字特征',\n        reply: '自动回复'\n    }))\n}\nexport interface multipleAnalysesWithPyReturns {\n    commentText: string,\n    dimension: string,\n    attitude: string,\n    textFeatures: string,\n    reply: string\n}","import React, { useState } from 'react'\nimport './MultipleAnalyses.css'\nimport { multipleAnalysesWithPy, multipleAnalysesWithPyReturns } from '../CalcWithPy'\n\nconst introParagraphs = [\n    '该页面利用人工智能分析[某行业]产品的评论。',\n    '导入数据文件，点击开始分析按钮，将输出各条评论对应的评论角度、评论态度、文字特征、人工智能给出的自动回复，以及总体的统计数据。',\n    '数据文件要求为 JSON 文件，格式为：{ \"data\" : string[] } 。',\n    '评论角度分为[n]方面，分别是：string[]。',\n    '评论态度分为两种：正面和负面'\n]\n\nconst defaultInputData: string[] = []\nconst defaultResults: multipleAnalysesWithPyReturns[] = []\n\nconst useSingleAnalyses = () => {\n    const [results, setResults] = useState(defaultResults)\n    const [inputData, setInputData] = useState(defaultInputData)\n\n    const inputFileRef = React.createRef<HTMLInputElement>()\n\n\n    const analyze = () => setResults(multipleAnalysesWithPy(inputData))\n\n    const inputFileOnChange = () => {\n        console.log(inputFileRef.current?.files)\n        const fileReader = new FileReader()\n        fileReader.onload = (e) => {\n            if (e.target?.result) {\n                setInputData(JSON.parse(e.target?.result.toString()).data)\n                console.log(JSON.parse(e.target?.result.toString()).data)\n\n            }\n            console.log(e.target?.result)\n        }\n        if (inputFileRef.current?.files && inputFileRef.current?.files.length > 0) {\n            fileReader.readAsText(inputFileRef.current?.files[0])\n        }\n    }\n\n    return {\n        results,\n        inputFileRef,\n        analyze,\n        inputFileOnChange\n    }\n}\n\nexport default function MultipleAnalyses() {\n    const {\n        results,\n        inputFileRef,\n        analyze,\n        inputFileOnChange\n    } = useSingleAnalyses()\n\n    return (\n        <main id=\"multiple-analyses\" key=\"多条分析\">\n\n            <article className=\"introduction\">\n                <h1>使用说明</h1>\n                {\n                    introParagraphs.map((item, index) =>\n                        <p key={index}>{item}</p>\n                    )\n                }\n            </article>\n            <article className=\"import-area\">\n                <h1>导入文件</h1>\n                <p>\n                    <input type=\"file\" ref={inputFileRef} onChange={inputFileOnChange} />\n                </p>\n                <button className=\"ms-button primary\" onClick={analyze}>开始分析</button>\n            </article>\n            <article className=\"statistical-results-area\">\n                <h1>统计结果</h1>\n                <section>\n                    <h2>各角度评论占比</h2>\n                    <p>[此处放置饼图]</p>\n                </section>\n                <section>\n                    <h2>各态度评论占比</h2>\n                    <p>[此处放置饼图]</p>\n                </section>\n            </article>\n            <article className=\"results-area\">\n                <h1>各条评论分析结果</h1>\n                {\n                    results.map((result, index) => (\n                        <article className=\"result-item\" key={index}>\n                            <h2 className=\"result-item-commentText\">评论原文</h2>\n                            <p>{result.commentText}</p>\n                            <h2 className=\"result-item-dimension\">评论角度</h2>\n                            <p>{result.dimension}</p>\n                            <h2 className=\"result-item-attitude\">评论态度</h2>\n                            <p>{result.attitude}</p>\n                            <h2 className=\"result-item-textFeatures\">文字特征</h2>\n                            <p>{result.textFeatures}</p>\n                            <h2 className=\"result-item-reply\">自动回复</h2>\n                            <p>{result.reply}</p>\n                        </article>\n                    ))\n                }\n            </article>\n        </main>\n    )\n}","import { useState } from 'react';\nimport './App.css'\nimport Nav from './Nav/Nav'\nimport SingleAnalyses from './SingleAnalyses/SingleAnalyses'\nimport MultipleAnalyses from './MultipleAnalyses/MultipleAnalyses'\n\nconst tabs = [\n  {\n    name: '单条分析',\n    component: SingleAnalyses\n  },\n  {\n    name: '批量分析',\n    component: MultipleAnalyses\n  }\n]\n\nconst getEventsHandle = ({ setCurrentTab }: {\n  currentTab: string,\n  setCurrentTab: React.Dispatch<React.SetStateAction<string>>\n}) => {\n  return {\n    goToTab: (tab: string) => setCurrentTab(tab)\n  }\n}\n\nconst useApp = () => {\n  const [currentTab, setCurrentTab] = useState('单条分析')\n\n  const eventsHandle = getEventsHandle({ currentTab, setCurrentTab })\n\n  return {\n    currentTab,\n    ...eventsHandle\n  }\n}\n\nfunction App() {\n  const {\n    currentTab,\n    goToTab\n  } = useApp()\n  return (\n    <div className=\"App\">\n      <Nav\n        tabs={tabs}\n        currentTab={currentTab}\n        goToTab={goToTab}\n      />\n      {\n        tabs.map(tab => {\n          const element = tab.component() // 必须调用，否则下级组件的 useState 无法调用导致报错\n          return tab.name === currentTab ? element : undefined\n        }).filter(item => !(item === undefined))\n      }\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}